{"meta":{"title":"퇴근후서버다운, 그건일","subtitle":"곧사십","description":"퇴근후서버다운, 그건일","author":"그건일","url":"http://thisisone.github.io"},"pages":[{"title":"tags","date":"2019-02-14T12:29:42.000Z","updated":"2019-09-01T12:33:21.858Z","comments":true,"path":"tags/index.html","permalink":"http://thisisone.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-02-14T12:29:52.000Z","updated":"2019-09-01T12:33:21.889Z","comments":true,"path":"categories/index.html","permalink":"http://thisisone.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2019-02-03T04:21:27.000Z","updated":"2019-09-01T12:33:22.362Z","comments":true,"path":"about/index.html","permalink":"http://thisisone.github.io/about/index.html","excerpt":"","text":"always test 윈터이즈커밍"}],"posts":[{"title":"OWC Envoy Pro 사고싶다","slug":"owc-envoy-pro","date":"2020-02-13T12:27:48.000Z","updated":"2020-02-15T04:09:33.607Z","comments":true,"path":"owc-envoy-pro/","link":"","permalink":"http://thisisone.github.io/owc-envoy-pro/","excerpt":"","text":"집에 호기롭게 구매한 Mac Pro 2013 late (원통모양) 이 있는데호기롭게 모양보고 샀기때문에 ssd 가 256gb 밖에 안된다. 안에 있는 ssd 를 1tb 로 바꾸고 싶은데그러면 안에서 뽑은 256gb 는 어떻게 될것인가? 그래서 OWC 에서는 비싼 1tb ssd 와 같이 사라고외장usb 로 변환할 수 있는 제품을 함께 판다. 그게 바로 이거 지금은 8만원 정도에 파는거 같다.좀더 존버 해본다.","categories":[],"tags":[{"name":"장비","slug":"장비","permalink":"http://thisisone.github.io/tags/장비/"},{"name":"쇼핑","slug":"쇼핑","permalink":"http://thisisone.github.io/tags/쇼핑/"}]},{"title":"svn merge (머지) 쉘스크립트","slug":"svn-merge-automation","date":"2020-02-13T11:52:18.000Z","updated":"2020-02-15T13:17:47.893Z","comments":true,"path":"svn-merge-automation/","link":"","permalink":"http://thisisone.github.io/svn-merge-automation/","excerpt":"","text":"자동으로 svn 머지 하고 배포하는 기능을 구현하였는데마지막 리비전 번호를 참조해서 하다보니아무것도 머지할게 없을때도 머지 하면 리비전 번호가높아져서 다음 리비전에 문제가 생기는 경우가 생겼습니다. 문제 있는 방법svn 머지할 내용이 없어도 머지하고 있습니다. 12345678910111213141516bash[n] svn revert -R 폴더[n] svn update 폴더[n][n] # 마지막리비전 을 얻는다.[n] svn log --limit 1 폴더 &gt; svn_log[n] cat svn_log | head -n 2 | awk &apos;&#123; rev=substr($1,2); print rev &#125;&apos; &gt; svn_log_revision[n] LAST_REVISION=$(cat revision | wc -l)[n] # REVISION=166[n][n][n] svn merge -r $REVISION:HEAD 머지소스URL 폴더[n] # 머지소스URL:SVN 주소 입니다.[n] # 폴더: 머지소스URL 에서 소스를 가져와서 머지할 폴더 를 말합니다.[n][n] svn commit -m &quot;솰라솰라&quot; 폴더 개선 후이 방법은 머지할 내용이 없다면 커밋을 진행하지 않습니다. 123456789101112131415161718192021222324252627282930bash[n] svn revert -R 폴더&lt;br/&gt;[n] svn update 폴더[n] [n] # 마지막리비전 을 얻는다.[n] svn log --limit 1 폴더 &gt; svn_log[n] cat svn_log | head -n 2 | awk &apos;&#123; rev=substr($1,2); print rev &#125;&apos; &gt; svn_log_revision[n] LAST_REVISION=$(cat revision | wc -l)[n] # REVISION=166[n] [n] [n] svn merge -r $REVISION:HEAD 머지소스URL 폴더[n] # 머지소스URL:SVN 주소 입니다.[n] # 폴더: 머지소스URL 에서 소스를 가져와서 머지할 폴더 를 말합니다.[n] [n] [n] svn status 폴더 &gt; svn_status[n] [n] LINE_COUNT=$(cat /game/dotnet/svn_status_after_merge | wc -l)[n] # LINE_COUNT=1[n] # 1 이상이 나옵니다.[n] # 2 이상이면 변동사항이 생겼다는 의미[n] [n] if [ $LINE_COUNT \\&gt; 1 ];[n] then[n] svn commit -m &quot;커밋합니다. $&#123;LAST_REVISION&#125;~&quot; 폴더[n] echo &quot;커밋합니다. $&#123;LAST_REVISION&#125;~&quot;[n] else[n] echo &quot;커밋하지 않는다.&quot;;[n] fi; 결과물을 파일로 뽑아서 다시 읽는 내용이 좀 있습니다.중간 결과가 어떤게 나오는지 좀 봐야해서 그렇게 했습니다. 대충 이런 명령어들을 알고 있어야 개발이 수월할듯합니다. head : 텍스트의 위에서 몇번째 줄까지 출력할지 정할 수 있다. awk : n번째 단어를 얻거나 글씨를 자를 수 있다. wc : 출력물의 라인수를 카운트할 수 있다. 변수에 결과 넣기 : 결과를 변수에 넣을 수 있다. if 문 : 조건문 결국 시간 들이면 편하긴하지만특수문자 같은걸 많이 썽해서 보기에는 안좋습니다. ㅎ","categories":[],"tags":[{"name":"svn","slug":"svn","permalink":"http://thisisone.github.io/tags/svn/"},{"name":"shell","slug":"shell","permalink":"http://thisisone.github.io/tags/shell/"},{"name":"linux","slug":"linux","permalink":"http://thisisone.github.io/tags/linux/"}]},{"title":"gvim 사용해보기","slug":"gvim","date":"2020-02-08T17:44:49.000Z","updated":"2020-02-15T13:32:41.000Z","comments":true,"path":"gvim/","link":"","permalink":"http://thisisone.github.io/gvim/","excerpt":"","text":"hyper.is 나 커맨드 창을 많이 쓰니까에디터가 필요해서 찾아보다 gvim 이 있군요 (검은 화면의 에디터) utf-8 파일을 표시 못해서 설정방법을 찾았습니다.그런데 이렇게 셋팅하면 euc-kr 가 깨져보입니다. 설정파일: C:\\Program Files (x86)\\Vim_vimrc 제일 마지막에 써줍니다. 12345bash[n] set tenc=korea[n] set enc=utf8[n] set langmenu=none[n] lang en 출처: 설치페이지https://www.vim.org/download.php) utf-8문제해결책","categories":[],"tags":[]},{"title":"hexo 에서 github 으로 deploy 할때 암호 입력 없이 진행하는법","slug":"hexo-deploy-github-nopassword","date":"2020-02-08T16:34:22.000Z","updated":"2020-02-15T13:34:54.559Z","comments":true,"path":"hexo-deploy-github-nopassword/","link":"","permalink":"http://thisisone.github.io/hexo-deploy-github-nopassword/","excerpt":"","text":"참고 링크: https://soulsearcher.github.io/2019/08/09/hexo-deploy-failed/ 참고 링크는 이중인증에 대한 내용이지만이중인증과 상관없이 사용가능하다.암호 매번 입력하는것도 번거럽고 ssh key 만들기git 깔고git bash 를 이용했다. 1[n] ssh-keygen -t rsa -b 4096 이러면 .ssh 폴더와id_rsaid_rsa.pub가 생긴다. ssh config 추가내가할땐 UseKeychain yes 부분이 문제가 되서 주석처리했다. 12345vim[n] Host *[n] AddKeysToAgent yes[n] #UseKeychain yes[n] IdentityFile ~/.ssh/id_rsa github 에 ssh key 등록하기우측 상단 의 프로필 아이콘 -&gt; Settings -&gt; SSH And ~~ -&gt; SSH 키 등록 id_rsa.pub 내용을 복분한다. 암호 없는 ssh 확인id 도 쓸필요 없이 연결해본다.12345bash[n] ssh -T git@github.com[n] [n] 결과:[n] Hi [내ID]! You&apos;ve successfully authenticated, but GitHub does not provide shell access. github 는 ssh 명령을 던지지 못하게 막혀있지만접속자가 누구인지 인지하면 성공 hexo 의 _config.yml 수정기존의 https://github~~ 주소가 아니고git@ 로 시작한다.마지막은 .git 으로 끝난다.1234vim[n] deploy:[n] type: git[n] repo: git@github.com:~~~.git hexo 로 배포해보자암호없이 잘 넘어가면 성공","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://thisisone.github.io/tags/hexo/"}]},{"title":"node.js 에서 tcp 서버 샘플","slug":"nodejs-tcp-server-sample","date":"2020-02-08T15:25:42.000Z","updated":"2020-02-15T13:40:17.520Z","comments":true,"path":"nodejs-tcp-server-sample/","link":"","permalink":"http://thisisone.github.io/nodejs-tcp-server-sample/","excerpt":"","text":"샘플을 발견하였는데필요한 대부분의 이벤트가 잘들어가 있었으며세션 별로 setTimeout 를 걸수 있었어서 편리했다. 빨리 만들어야 해서 for 문돌면서 글자 합쳐 주는 부분이 있는데효율은 잘 모르겠다. telnet 으로 테스트 정도는 할 수 있었다.npm 으로 별다른 설치를 하지않아도 되서 좋다.. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990javascript[n] var net = require(&apos;net&apos;);[n] var server = net.createServer(function (client) &#123;[n] [n] console.log(&apos;연결됨&apos;);[n] [n] client.setTimeout(10000); // 주기적으로 업데이트 가능[n] client.recv = &apos;&apos;; // 받기 버퍼 같은 용도 json 통신을 할예정[n] [n] client.on(&apos;data&apos;, function (data) &#123;[n] [n] // json 통신을 파싱합니다.[n] var text = data.toString();[n] for (var i = 0; i &lt; text.length; i++) &#123;[n] if (text[i] === &apos;\\r&apos;)[n] continue;[n] if (text[i] !== &apos;\\n&apos;) &#123;[n] client.recv += text[i];[n] continue;[n] &#125;[n] [n] var req_text = client.recv;[n] client.recv = &apos;&apos;;[n] var jreq = jsonParsing(req_text);[n] if (jreq === null)[n] &#123;[n] console.error(&quot;json 파싱 실패&quot;, req_text);[n] continue;[n] &#125;[n] [n] if (jreq.api == &apos;hello&apos;) &#123;[n] // 응답도 json[n] var data = &#123;[n] api: jreq.api,[n] code: 100,[n] message: &apos;hello2&apos;[n] &#125;;[n] writeData(client, data);[n] &#125;[n] else &#123;[n] console.error(&apos;처리되지 않은 api&apos;, jreq.api);[n] [n] var data = &#123;[n] api: jreq.api,[n] code: -1,[n] message: &apos;api fail&apos;, [n] &#125;;[n] writeData(client, data);[n] &#125;[n] &#125;[n] &#125;);[n] client.on(&apos;end&apos;, function () &#123;[n] console.log(&apos;연결이 끊겼다.&apos;);[n] [n] server.getConnections(function (err, count) &#123;[n] console.log(&apos;남은 연결 가능수:&apos;, count);[n] &#125;);[n] &#125;);[n] client.on(&apos;error&apos;, function (err) &#123;[n] console.error(&apos;소켓 에러r:&apos;, err);[n] &#125;);[n] client.on(&apos;timeout&apos;, function () &#123;[n] console.error(&apos;소켓 타이머 이벤트&apos;);[n] client.destroy();[n] &#125;);[n] &#125;);[n] server.listen(8000, function () &#123;[n] console.log(&apos;서버 시작합니다.&apos;, server.address());[n] [n] server.on(&apos;close&apos;, function () &#123;[n] console.log(&apos;서버 종료합니다.&apos;);[n] &#125;);[n] [n] server.on(&apos;error&apos;, function (err) &#123;[n] console.log(&apos;서버 에러:&apos;, err);[n] &#125;);[n] &#125;);[n] [n] function writeData(socket, data) &#123;[n] var data2 = JSON.stringify(data) + &quot;\\r\\n&quot;; [n] socket.write(data2);[n] &#125;[n] [n] function jsonParsing(data) &#123;[n] try &#123;[n] return JSON.parse(data);[n] &#125; catch &#123;[n] return null;[n] &#125;[n] &#125; cafe24 에 웹서버포트를 tcp 로 돌리려고 했는데웹통신이 아니면 통신 못하도록 막혀있는거 같다..","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"http://thisisone.github.io/tags/node-js/"},{"name":"tcp","slug":"tcp","permalink":"http://thisisone.github.io/tags/tcp/"},{"name":"server","slug":"server","permalink":"http://thisisone.github.io/tags/server/"}]},{"title":"node.js 에서 뭔가 실행하기","slug":"nodesj-process-execute","date":"2020-02-08T06:32:07.000Z","updated":"2020-02-15T13:40:12.255Z","comments":true,"path":"nodesj-process-execute/","link":"","permalink":"http://thisisone.github.io/nodesj-process-execute/","excerpt":"","text":"test.bat 를 실행하는 코드 123456javascript[n] var exec = require(&apos;child_process&apos;).exec;[n] var child = exec(&quot;test.bat&quot;, function (error, stdout, stderr) &#123;[n] // error !== null 알 수 있다.[n] console.log(&quot;exec end&quot;, stdout, stderr, error);[n] &#125;); npm 설치 없이도 되는거 같다.윈도우즈에서는 stdout, stderr, error 가 글자가깨져서 보이는데…","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"http://thisisone.github.io/tags/node-js/"}]},{"title":"프로필 사진을 그려보았다","slug":"draw-profile-image","date":"2019-09-08T05:08:40.000Z","updated":"2020-02-08T18:18:28.403Z","comments":true,"path":"draw-profile-image/","link":"","permalink":"http://thisisone.github.io/draw-profile-image/","excerpt":"","text":"유튜브를 해야하기때문에 날림으로채널도 만들고 프로필사진도 만들었다. 원본은 DATADOG 의 로그를 보고 그림판으로 그린거임 DATADOG 의 로고 내가그린거 (채널용) 내가그린거 (내 계정용) 그런데..구글계정에서 프로필 사진을 올렸지만 곧바로 적용이 안되는지 옛날 사진이 자꾸 나온다.","categories":[],"tags":[{"name":"youtube","slug":"youtube","permalink":"http://thisisone.github.io/tags/youtube/"}]},{"title":"거북목 교정 운동","slug":"neck-stretching","date":"2019-09-04T13:51:47.000Z","updated":"2020-02-08T18:18:28.403Z","comments":true,"path":"neck-stretching/","link":"","permalink":"http://thisisone.github.io/neck-stretching/","excerpt":"","text":"으앗","categories":[],"tags":[{"name":"운동","slug":"운동","permalink":"http://thisisone.github.io/tags/운동/"}]},{"title":"c# 에서 문자열 연산의 성능 문제","slug":"csharp-string-append-and-format-diff","date":"2019-09-03T15:30:12.000Z","updated":"2020-02-15T13:32:09.556Z","comments":true,"path":"csharp-string-append-and-format-diff/","link":"","permalink":"http://thisisone.github.io/csharp-string-append-and-format-diff/","excerpt":"","text":"유니티에서 로그를 on / off 시키는걸 만들려다 우연히 테스트 해보았는데 꽤 충젹적인 결과가 나와서 공유 해봅니다. 123456csharp[n] // 1번. 더한다[n] Debug.Log(&quot;abc&quot;+&quot;def&quot;);[n] [n] // 2번. string.format() 형태로 쓴다.[n] Debug.Log(&quot;&#123;0&#125;&#123;1&#125;&quot;, &quot;abc&quot;, &quot;def&quot;); 로그를 끄는 걸 가정하고 위 고드는 그대로 배포 된다면문자열 연산이 일어나지 않나 해서 2번이 더 좋을것 같았다. 성능을 측정123456[n] abc= 1ms // 안 더한다.[n] abc+def= 1ms // 한번 더한다.[n] abc+def+ghi= 1ms // 두번 더한다.[n] format:abcdef= 3ms // string format, params object[] args 를 첫번째 인자만 썼다.[n] format:[0],abcdef= 10ms // 두번째 인자 까지 썼다.[n] format:[0][1],abcdef,ghi= 19ms // 세번째 인자 까지 썼다. 맙소사테스트코드 공유해봅니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192[n] using System;[n] using System.Collections;[n] using System.Collections.Generic;[n] using UnityEngine;[n] [n] public class FirstScene : MonoBehaviour[n] &#123;[n] void Update()[n] &#123;[n] if(Input.GetKeyDown(KeyCode.Space))[n] &#123;[n] int count = 100000;[n] var sw = new System.Diagnostics.Stopwatch();[n] sw.Start();[n] for(int i=0; i&lt; count; i++)[n] &#123;[n] LogTest1(\"abc\");[n] &#125;[n] sw.Stop();[n] var test1 = sw.ElapsedMilliseconds;[n] [n] [n] sw.Reset();[n] sw.Start();[n] for (int i = 0; i &lt; count; i++)[n] &#123;[n] LogTest1(\"abc\" + \"def\");[n] &#125;[n] sw.Stop();[n] var test11 = sw.ElapsedMilliseconds;[n] [n] [n] sw.Reset();[n] sw.Start();[n] for (int i = 0; i &lt; count; i++)[n] &#123;[n] LogTest1(\"abc\" + \"def\" + \"ghi\");[n] &#125;[n] sw.Stop();[n] var test111 = sw.ElapsedMilliseconds;[n] [n] [n] sw.Reset();[n] sw.Start();[n] for (int i = 0; i &lt; count; i++)[n] &#123;[n] LogTest2(\"abcdef\");[n] &#125;[n] sw.Stop();[n] var test2 = sw.ElapsedMilliseconds;[n] [n] [n] sw.Reset();[n] sw.Start();[n] for (int i = 0; i &lt; count; i++)[n] &#123;[n] LogTest2(\"&#123;0&#125;\", \"abcdef\");[n] &#125;[n] sw.Stop();[n] var test22 = sw.ElapsedMilliseconds;[n] [n] [n] sw.Reset();[n] sw.Start();[n] for (int i = 0; i &lt; count; i++)[n] &#123;[n] LogTest2(\"&#123;0&#125;&#123;1&#125;\", \"abcdef\", \"ghi\");[n] &#125;[n] sw.Stop();[n] var test222 = sw.ElapsedMilliseconds;[n] [n] string s = \"\";[n] s += string.Format(\"abc= &#123;0&#125;ms\\n\", test1);[n] s += string.Format(\"abc+def= &#123;0&#125;ms\\n\", test11);[n] s += string.Format(\"abc+def+ghi= &#123;0&#125;ms\\n\", test111);[n] s += string.Format(\"format:abcdef= &#123;0&#125;ms\\n\", test2);[n] s += string.Format(\"format:[0],abcdef= &#123;0&#125;ms\\n\", test22);[n] s += string.Format(\"format:[0][1],abcdef,ghi= &#123;0&#125;ms\\n\", test222);[n] Debug.Log(s);[n] &#125;[n] &#125;[n] [n] void LogTest1(string msg)[n] &#123;[n] [n] &#125;[n] [n] void LogTest2(string format, params object[] args)[n] &#123;[n] [n] &#125;[n] &#125; 추가로Unity 에서는 쓸 수 없지만dotnet core 에서 아래와 같이 쓰는 기능이 있던데 1[n] Log($\"&#123;arg[0]&#125;&#123;arg[1]&#125;\"); 이게 속도가 제일 빨랐다.","categories":[],"tags":[{"name":"c#","slug":"c","permalink":"http://thisisone.github.io/tags/c/"}]},{"title":"hexo 셋팅 방법","slug":"hexo-setting","date":"2019-09-01T13:36:56.000Z","updated":"2020-02-15T13:37:53.466Z","comments":true,"path":"hexo-setting/","link":"","permalink":"http://thisisone.github.io/hexo-setting/","excerpt":"","text":"한번하면 까먹고 검색하고 또 까먹고 해서 기록해둡니다. 참고 링크 설치법 마크다운요약 설치할때nas 에서 blog 를 받는다. windows 를 새로 설치했다면 hxeo-cli 설치12bash[n] npm install -g hexo-cli 다음 명령어 실행12bash[n] npm install 작업할때사이트 띄우기12bash[n] hexo serve 새로운 포스트12bash[n] hexo new post 파일명 업로드 방법배포 플러그인 설치12bash[n] npm install --save hexo-deployer-git 변경점 업데이트 문제가 생긴다면 이거 해주고12bash[n] hexo clean 올릴때는 보통 이렇게123bash[n] hexo clean[n] hexo deploy 링크 마크다운 github 암호 없이 업로드 autolink 플러그인 설명","categories":[],"tags":[]},{"title":"웹 크롤링 해보기","slug":"web_crawler","date":"2019-02-18T16:02:45.000Z","updated":"2020-02-15T13:41:28.450Z","comments":true,"path":"web_crawler/","link":"","permalink":"http://thisisone.github.io/web_crawler/","excerpt":"","text":"node.js phantom 을 사용 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849javascript[n] /*jshint esversion: 6 */[n] [n] const URL = &quot;http://search.danawa.com/dsearch.php?k1=ddr4&amp;module=goods&amp;act=dispMain&quot;;[n] [n] const phantom = require(&apos;phantom&apos;);[n] var path = require(&apos;path&apos;);[n] [n] (async function() &#123;[n] const instance = await phantom.create();[n] const page = await instance.createPage();[n] await page.on(&apos;onResourceRequested&apos;, function(requestData) &#123;[n] /*[n] var ext = path.extname(requestData.url);[n] if(ext == &apos;.png&apos; || ext == &apos;.gif&apos; || ext == &apos;.jpeg&apos;) &#123;[n] return;[n] &#125;[n] else if(ext.indexOf(&apos;.css&apos;) == 0 || ext.indexOf(&apos;.js&apos;) == 0 || ext.indexOf(&apos;.jpg&apos;) == 0 ) &#123;[n] return;[n] &#125;[n] console.info(&apos;Requesting&apos;, ext, requestData.url);[n] */[n] &#125;);[n] await page.on(&apos;onConsoleMessage&apos;, function(msg) &#123;[n] console.info(&apos;onConsoleMessage&apos;, msg);[n] &#125;);[n] await page.on(&apos;onError&apos;, function(msg) &#123;[n] console.info(&apos;onError&apos;, msg);[n] &#125;);[n] [n] const status = await page.open(URL);[n] [n] await new Promise(resolve =&gt; setTimeout(resolve, 3000))[n] [n] // await page.includeJs(&apos;https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js&apos;);[n] // await page.includeJs(&apos;http://static.danawa.com/globaljs/external/jquery/core/last/jquery-last.min.js?v=1901301728&apos;);[n] [n] await page.evaluate(function() &#123;[n] // $(&apos;span[price]&apos;).filter(function () &#123;[n] // var data = $(this);[n] // console.log(&quot;Price: &quot; + data.text());[n] // &#125;);[n] &#125;);[n] [n] const content = await page.property(&apos;content&apos;);[n] console.log(content);[n] [n] await instance.exit();[n] &#125;)();","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"http://thisisone.github.io/tags/node-js/"}]},{"title":"안드로이드 앱 용 keystore 만들기","slug":"keystore","date":"2019-02-03T03:18:55.000Z","updated":"2020-02-15T13:38:50.201Z","comments":true,"path":"keystore/","link":"","permalink":"http://thisisone.github.io/keystore/","excerpt":"","text":"명령어12bash[n] keytool -genkey -v -keystore [파일명] -alias [앱이름] -keyalg RSA -keysize 2048 -validity [유효일] 삽질기 keytool 명령어가 keystore 인줄 잘못 봤음 keytool 은 jdk 에 있었음 (anroid sdk 에 있는 줄) 암호가 6자는 넘어야함 // :\\Java\\jdk1.8.0_191\\bin\\keytool -genkey -v -keystore dcapp.keystore -alias dcapp -keyalg RSA -keysize 2048 -validity 10000 PlayerSettings.Android.keystoreName = &quot;Assets/Editor/dcapp.keystore&quot;; PlayerSettings.Android.keystorePass = &quot;dcappkey&quot;; PlayerSettings.Android.keyaliasName = &quot;dcapp&quot;; PlayerSettings.Android.keyaliasPass = &quot;dcappkey&quot;;","categories":[{"name":"개발","slug":"개발","permalink":"http://thisisone.github.io/categories/개발/"}],"tags":[{"name":"안드로이드","slug":"안드로이드","permalink":"http://thisisone.github.io/tags/안드로이드/"}]},{"title":"hyper.is 사용법","slug":"hyper-is","date":"2019-01-16T12:15:02.000Z","updated":"2020-02-15T13:38:34.164Z","comments":true,"path":"hyper-is/","link":"","permalink":"http://thisisone.github.io/hyper-is/","excerpt":"","text":"커맨드창보다 뜨는게 좀 느리지만 장점도 있음 장점 복사 붙여넣기 가 편리함 창 크기를 자유롭게 조정 가능함 링크가 있다면 클릭 할 수 있다 폰트가 작아서 좀더 많이 볼 수 있다. 설치 &amp; 설정 hyper.is 에서 설치파일을 다운로드합니다. hyper 를 실행합니다. 플러그인을 커맨드 명령으로 설치한다.1234bash[n] hyper install hyperpower[n] hyper install hyper-letters[n] hyper install hyperborder hyperpower - 글자 칠때마다 폭발을한다. | hyper-letters - 입력하면 글자가 흘러내린다. hyperborder - 창틀의 테두리가 빨간색으로 바뀐다. (잘보임)","categories":[],"tags":[{"name":"hyper","slug":"hyper","permalink":"http://thisisone.github.io/tags/hyper/"},{"name":"app","slug":"app","permalink":"http://thisisone.github.io/tags/app/"}]}]}